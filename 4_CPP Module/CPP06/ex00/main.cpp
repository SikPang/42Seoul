/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kwsong <kwsong@student.42seoul.kr>         +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/17 16:35:16 by kwsong            #+#    #+#             */
/*   Updated: 2023/02/17 17:33:47 by kwsong           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/*
가장 일반적인 형태로 C++ 리터럴의 문자열 표현을 매개 변수로 사용하는 프로그램을 작성합니다. 
이 리터럴은 다음 스칼라 유형 중 하나에 속해야 합니다:
char, int, float 또는 double. 문자 매개 변수를 제외하고 10진수 표기법만 사용됩니다.

문자의 예: 'c', 'a', ...

쉽게 설명하기 위해 표시할 수 없는 문자를 입력으로 사용하면 안 됩니다. 
char로 변환한 내용을 표시할 수 없는 경우 유용한 메시지를 출력합니다.

정수의 예: 0, -42, 42...
부동 리터럴의 예: 0.0f, -4.2f, 4.2f...

당신은 이 사이비 리터럴들도 다뤄야 한다(알다시피, 과학을 위해서): -inff, +inff, nanf
이중 리터럴의 예: 0.0, -4.2, 4.2...
당신은 또한 이 사이비 리터럴들을 다루어야 한다. (너도 알다시피, 재미로) -inf, +inf, nan.

매개 변수로 전달된 리터럴 유형을 먼저 탐지하고 문자열에서 실제 유형으로 변환한 다음 
다른 세 가지 데이터 유형으로 명시적으로 변환해야 합니다. 마지막으로 결과를 아래와 같이 표시합니다.
변환이 의미가 없거나 오버플로되면 사용자에게 유형 변환이 불가능함을 알리는 메시지를 표시합니다. 
숫자 제한 및 특수 값을 처리하는 데 필요한 헤더를 포함합니다.
*/

#include <iostream>
#include <string>
#include "CastAndPrint.hpp"

int main(int ac, char **av)
{
	if (ac != 2)
	{
		std::cout << "argument count is not 2\n";
		return 0;
	}

	std::string	arg = av[1];

	// arg가 int, float, double이 아닐 때 예외처리

	if (arg.find('.'))
		CastAndPrint(stod(arg));
	else
		CastAndPrint(stoi(arg));
}