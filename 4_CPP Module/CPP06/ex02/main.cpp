/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kwsong <kwsong@student.42seoul.kr>         +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/17 17:49:30 by kwsong            #+#    #+#             */
/*   Updated: 2023/02/17 17:51:13 by kwsong           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/*
공용 가상 소멸자만 있는 기본 클래스를 구현합니다.
Base에서 공용으로 상속되는 세 개의 빈 클래스 A, B 및 C를 만듭니다.
이 네 개의 클래스는 정교회 표준 형식으로 설계될 필요가 없습니다.
다음 기능을 구현합니다:
기준 * 생성(보이드);
A, B 또는 C를 임의로 인스턴스화하고 기본 포인터로 인스턴스를 반환합니다. 
임의 선택 구현을 위해 원하는 모든 것을 자유롭게 사용하십시오.
void identify (Base* p);
이것은 p로 가리키는 객체의 실제 유형을 인쇄한다: "A", "B" 또는 "C".
void identify(기준 & p);
이것은 p로 가리키는 객체의 실제 유형을 인쇄한다: "A", "B" 또는 "C". 이
 기능 내에서 포인터를 사용하는 것은 금지되어 있습니다.
typeinfo 헤더를 포함하는 것은 금지됩니다.
모든 것이 예상대로 작동하는지 테스트하는 프로그램을 작성합니다.
*/

int main()
{
	
}